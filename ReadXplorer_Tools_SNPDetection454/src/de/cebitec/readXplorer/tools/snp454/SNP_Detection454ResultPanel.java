/*
 * SNP_Detection454ResultPanel.java
 *
 * Created on 03.06.2011, 15:16:53
 */
package de.cebitec.readXplorer.tools.snp454;

import de.cebitec.readXplorer.databackend.dataObjects.Snp454;
import de.cebitec.readXplorer.databackend.dataObjects.SnpData;
import de.cebitec.readXplorer.exporter.excel.SnpExcelFileChooser;
import de.cebitec.readXplorer.view.dataVisualisation.BoundsInfoManager;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author msmith
 */
public class SNP_Detection454ResultPanel extends javax.swing.JPanel {
    
    private static final long serialVersionUID = 1L;
    private BoundsInfoManager bim;
    private List<Snp454> snps;

    /** Creates new form SNP_Detection454ResultPanel */
    public SNP_Detection454ResultPanel() {
        initComponents();
        
        snps = new ArrayList<Snp454>();
        DefaultListSelectionModel model = (DefaultListSelectionModel) jTable1.getSelectionModel();
        model.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                showSnpPosition();
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        resultProgressBar = new javax.swing.JProgressBar();
        exportSNPsButton = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Position", "Base", "Refence Base", "Count", "%", "% variation at position"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(SNP_Detection454ResultPanel.class, "SNP_Detection454ResultPanel.jTable1.columnModel.title0")); // NOI18N
        jTable1.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(SNP_Detection454ResultPanel.class, "SNP_Detection454ResultPanel.jTable1.columnModel.title1")); // NOI18N
        jTable1.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(SNP_Detection454ResultPanel.class, "SNP_Detection454ResultPanel.jTable1.columnModel.title5")); // NOI18N
        jTable1.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(SNP_Detection454ResultPanel.class, "SNP_Detection454ResultPanel.jTable1.columnModel.title2")); // NOI18N
        jTable1.getColumnModel().getColumn(4).setHeaderValue(org.openide.util.NbBundle.getMessage(SNP_Detection454ResultPanel.class, "SNP_Detection454ResultPanel.jTable1.columnModel.title3")); // NOI18N
        jTable1.getColumnModel().getColumn(5).setHeaderValue(org.openide.util.NbBundle.getMessage(SNP_Detection454ResultPanel.class, "SNP_Detection454ResultPanel.jTable1.columnModel.title4")); // NOI18N

        exportSNPsButton.setText(org.openide.util.NbBundle.getMessage(SNP_Detection454ResultPanel.class, "SNP_Detection454ResultPanel.exportSNPsButton.text")); // NOI18N
        exportSNPsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportSNPsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addComponent(resultProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
                    .addComponent(exportSNPsButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exportSNPsButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void exportSNPsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportSNPsButtonActionPerformed
        evt.setSource(new SnpData(this.snps, new  HashMap<Integer,String>()));
        SnpExcelFileChooser fileChooser = new SnpExcelFileChooser("xls", evt);
    }//GEN-LAST:event_exportSNPsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exportSNPsButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JProgressBar resultProgressBar;
    // End of variables declaration//GEN-END:variables

public void addSNPs(List<Snp454> snps) {
        this.snps = snps;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        for (Snp454 snp : snps) {            
            Object[] rowData = new Object[6];
            rowData[0] = snp.getPosition();
            rowData[1] = snp.getBase();
            rowData[2] = snp.getRefBase();
            rowData[3] = snp.getCoverage();
            rowData[4] = snp.getPercentage();
            rowData[5] = snp.getVariationPercentag();
            model.addRow(rowData);
        }
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>();
        jTable1.setRowSorter(sorter);
        sorter.setModel(model);
    }

    public void setBoundsInfoManager(BoundsInfoManager boundsInformationManager) {
        this.bim = boundsInformationManager;
    }

    private void showSnpPosition() {
        DefaultListSelectionModel model = (DefaultListSelectionModel) jTable1.getSelectionModel();
        int selectedView = model.getLeadSelectionIndex();
        int selectedModel = jTable1.convertRowIndexToModel(selectedView);
        int position = (Integer) jTable1.getModel().getValueAt(selectedModel, 0);
        bim.navigatorBarUpdated(position);
    }
}
