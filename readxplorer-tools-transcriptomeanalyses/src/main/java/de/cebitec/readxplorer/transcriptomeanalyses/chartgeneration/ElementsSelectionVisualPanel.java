/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package de.cebitec.readxplorer.transcriptomeanalyses.chartgeneration;


import javax.swing.JPanel;


public final class ElementsSelectionVisualPanel extends JPanel {

    /**
     * Creates new form ElementsSelectionVisualPanel1
     */
    public ElementsSelectionVisualPanel() {
        initComponents();
    }


    @Override
    public String getName() {
        return "Data selection";
    }


    /**
     *
     * @return <true> if all elements are selected else <false>
     */
    public boolean isAllElementsSelected() {
        return this.allElementsCB.isSelected();
    }


    /**
     *
     * @return <true> if all elements with a 5'-UTR are selected else <false>
     */
    public boolean isAllWithUtrSelected() {
        return this.allWithUTRCB.isSelected();
    }


    /**
     *
     * @return <true> if only selected elements are selected else <false>
     */
    public boolean isOnlyForUpstrAnalSelected() {
        return this.onlySelectedCB.isSelected();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        allElementsCB = new javax.swing.JCheckBox();
        allWithUTRCB = new javax.swing.JCheckBox();
        onlySelectedCB = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ElementsSelectionVisualPanel.class, "ElementsSelectionVisualPanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(allElementsCB, org.openide.util.NbBundle.getMessage(ElementsSelectionVisualPanel.class, "ElementsSelectionVisualPanel.allElementsCB.text")); // NOI18N
        allElementsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allElementsCBActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(allWithUTRCB, org.openide.util.NbBundle.getMessage(ElementsSelectionVisualPanel.class, "ElementsSelectionVisualPanel.allWithUTRCB.text")); // NOI18N
        allWithUTRCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allWithUTRCBActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(onlySelectedCB, org.openide.util.NbBundle.getMessage(ElementsSelectionVisualPanel.class, "ElementsSelectionVisualPanel.onlySelectedCB.text")); // NOI18N
        onlySelectedCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlySelectedCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(onlySelectedCB)
                    .addComponent(allWithUTRCB)
                    .addComponent(allElementsCB)
                    .addComponent(jLabel1))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(allElementsCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(allWithUTRCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(onlySelectedCB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void allElementsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allElementsCBActionPerformed
        if( allElementsCB.isSelected() ) {
            allWithUTRCB.setSelected( false );
            onlySelectedCB.setSelected( false );
        }
    }//GEN-LAST:event_allElementsCBActionPerformed

    private void allWithUTRCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allWithUTRCBActionPerformed
        if( allWithUTRCB.isSelected() ) {
            allElementsCB.setSelected( false );
            onlySelectedCB.setSelected( false );
        }
    }//GEN-LAST:event_allWithUTRCBActionPerformed

    private void onlySelectedCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlySelectedCBActionPerformed
        if( onlySelectedCB.isSelected() ) {
            allElementsCB.setSelected( false );
            allWithUTRCB.setSelected( false );
        }
    }//GEN-LAST:event_onlySelectedCBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox allElementsCB;
    private javax.swing.JCheckBox allWithUTRCB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox onlySelectedCB;
    // End of variables declaration//GEN-END:variables
}
