/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package de.cebitec.readxplorer.transcriptomeanalyses.motifsearch;


import de.cebitec.readxplorer.transcriptomeanalyses.enums.PurposeEnum;
import javax.swing.JPanel;


public final class DataSelectionVisualPanel extends JPanel {

    /**
     * Creates new form DataSelectionVisualPanel
     */
    public DataSelectionVisualPanel( PurposeEnum purpose ) {
        initComponents();
        this.buttonSelectionGroup.add( onlyLeaderlessElementsCB );
        this.buttonSelectionGroup.add( onlyPutAntisenseElementsCB );
        this.buttonSelectionGroup.add( onlyRealTssCB );
        this.buttonSelectionGroup.add( onlySelectedCB );

        if( purpose == PurposeEnum.CHARTS || purpose == PurposeEnum.SEQUIN_EXPORT ) {
            this.disableLengthSelection();
        }
    }


    @Override
    public String getName() {
        return "Data type selection";
    }


    public boolean isAllElements() {
        return allElementsCB.isSelected();
    }


    public boolean isOnlyLeaderlessElements() {
        return onlyLeaderlessElementsCB.isSelected();
    }


    public boolean isOnlyAntisenseElements() {
        return onlyPutAntisenseElementsCB.isSelected();
    }


    public boolean isOnlyRealTSS() {
        return onlyRealTssCB.isSelected();
    }


    public Integer getLengthRelativeToTss() {
        return Integer.valueOf( this.lengthRelativeToTSS.getText() );
    }


    public void disableLengthSelection() {
        this.lengthRelativeToTSS.setEnabled( false );
        this.lengthSelectionLabel.setEnabled( false );
    }


    public boolean isOnlySelected() {
        return onlySelectedCB.isSelected();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonSelectionGroup = new javax.swing.ButtonGroup();
        allElementsCB = new javax.swing.JCheckBox();
        onlyLeaderlessElementsCB = new javax.swing.JCheckBox();
        onlyPutAntisenseElementsCB = new javax.swing.JCheckBox();
        onlyRealTssCB = new javax.swing.JCheckBox();
        lengthRelativeToTSS = new javax.swing.JTextField();
        lengthSelectionLabel = new javax.swing.JLabel();
        onlySelectedCB = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        org.openide.awt.Mnemonics.setLocalizedText(allElementsCB, org.openide.util.NbBundle.getMessage(DataSelectionVisualPanel.class, "DataSelectionVisualPanel.allElementsCB.text")); // NOI18N
        allElementsCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allElementsCBActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(onlyLeaderlessElementsCB, org.openide.util.NbBundle.getMessage(DataSelectionVisualPanel.class, "DataSelectionVisualPanel.onlyLeaderlessElementsCB.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(onlyPutAntisenseElementsCB, org.openide.util.NbBundle.getMessage(DataSelectionVisualPanel.class, "DataSelectionVisualPanel.onlyPutAntisenseElementsCB.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(onlyRealTssCB, org.openide.util.NbBundle.getMessage(DataSelectionVisualPanel.class, "DataSelectionVisualPanel.onlyRealTssCB.text")); // NOI18N

        lengthRelativeToTSS.setText(org.openide.util.NbBundle.getMessage(DataSelectionVisualPanel.class, "DataSelectionVisualPanel.lengthRelativeToTSS.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(lengthSelectionLabel, org.openide.util.NbBundle.getMessage(DataSelectionVisualPanel.class, "DataSelectionVisualPanel.lengthSelectionLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(onlySelectedCB, org.openide.util.NbBundle.getMessage(DataSelectionVisualPanel.class, "DataSelectionVisualPanel.onlySelectedCB.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DataSelectionVisualPanel.class, "DataSelectionVisualPanel.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lengthSelectionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lengthRelativeToTSS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(onlySelectedCB)
                            .addComponent(onlyRealTssCB)
                            .addComponent(onlyPutAntisenseElementsCB, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(onlyLeaderlessElementsCB)
                            .addComponent(allElementsCB))
                        .addGap(0, 9, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(allElementsCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(onlyLeaderlessElementsCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(onlyPutAntisenseElementsCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(onlyRealTssCB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(onlySelectedCB)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lengthRelativeToTSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lengthSelectionLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void allElementsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allElementsCBActionPerformed

        if( allElementsCB.isSelected() ) {
            buttonSelectionGroup.clearSelection();
            this.onlyLeaderlessElementsCB.setEnabled( false );
            this.onlyPutAntisenseElementsCB.setEnabled( false );
            this.onlyRealTssCB.setEnabled( false );
            this.onlySelectedCB.setEnabled( false );
        }
        else {
            this.onlyLeaderlessElementsCB.setEnabled( true );
            this.onlyPutAntisenseElementsCB.setEnabled( true );
            this.onlyRealTssCB.setEnabled( true );
            this.onlySelectedCB.setEnabled( true );
        }

    }//GEN-LAST:event_allElementsCBActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox allElementsCB;
    private javax.swing.ButtonGroup buttonSelectionGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField lengthRelativeToTSS;
    private javax.swing.JLabel lengthSelectionLabel;
    private javax.swing.JCheckBox onlyLeaderlessElementsCB;
    private javax.swing.JCheckBox onlyPutAntisenseElementsCB;
    private javax.swing.JCheckBox onlyRealTssCB;
    private javax.swing.JCheckBox onlySelectedCB;
    // End of variables declaration//GEN-END:variables
}
