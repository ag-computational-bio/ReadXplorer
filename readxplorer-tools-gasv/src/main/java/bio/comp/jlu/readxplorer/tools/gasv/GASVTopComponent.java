/*
 * Copyright (C) 2015 Institute for Bioinformatics and Systems Biology, University Giessen, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package bio.comp.jlu.readxplorer.tools.gasv;

import de.cebitec.readxplorer.ui.TopComponentExtended;
import de.cebitec.readxplorer.ui.TopComponentHelper;
import javax.swing.JPanel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.NbBundle.Messages;
import org.openide.windows.TopComponent;


/**
 * TopComponent of the GASV genome rearrangement detection. It displays all
 * results of all carried out GASV analyses.
 * <p>
 * @author Rolf Hilker <rolf.hilker at mikrobio.med.uni-giessen.de>
 */
@ConvertAsProperties(
         dtd = "-//bio.comp.jlu.readxplorer.tools.gasv//GASV//EN",
         autostore = false
)
@TopComponent.Description(
         preferredID = "GASVTopComponent",
         iconBase = "de/cebitec/readxplorer/tools/coverageanalysis/coveredIntervals.png",
         persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration( mode = "output", openAtStartup = false )
@ActionID( category = "Window", id = "bio.comp.jlu.readxplorer.tools.gasv.GASVTopComponent" )
@ActionReference( path = "Menu/Window" /* , position = 333 */ )
@TopComponent.OpenActionRegistration(
         displayName = "#CTL_GASVAction",
         preferredID = "GASVTopComponent"
)
@Messages( {
    "CTL_GASVAction=GASV",
    "CTL_GASVTopComponent=GASV Window",
    "HINT_GASVTopComponent=This is a GASV genome rearrangement detection window"
} )
public final class GASVTopComponent extends TopComponentExtended {

    private static final long serialVersionUID = 1L;


    /**
     * TopComponent of the GASV genome rearrangement detection. It displays all
     * results of all carried out GASV analyses.
     */
    public GASVTopComponent() {
        initComponents();
        setName( Bundle.CTL_GASVTopComponent() );
        setToolTipText( Bundle.HINT_GASVTopComponent() );
        putClientProperty( TopComponent.PROP_KEEP_PREFERRED_SIZE_WHEN_SLIDED_IN, Boolean.TRUE );
        TopComponentHelper.setupContainerListener( gasvTabbedPane, preferredID() );

    }


    /** This method is called from within the constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gasvTabbedPane = new javax.swing.JTabbedPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gasvTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gasvTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane gasvTabbedPane;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }


    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }


    void writeProperties( java.util.Properties p ) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty( "version", "1.0" );
        // TODO store your settings
    }


    void readProperties( java.util.Properties p ) {
        String version = p.getProperty( "version" );
        // TODO read your settings according to their version
    }


    /**
     * This method needs to be called in order to open a new tab for a GASV
     * genome rearrangement detection.
     * <p>
     * @param panelName   Title of the new tab to create
     * @param resultPanel The panel to place in the new tab
     */
    public void openAnalysisTab( String panelName, JPanel resultPanel ) {
        TopComponentHelper.openTableTab( gasvTabbedPane, panelName, resultPanel );
    }


    /**
     * @return true, if this component already contains other components, false
     *         otherwise.
     */
    public boolean hasComponents() {
        return gasvTabbedPane.getComponentCount() > 0;
    }


}
